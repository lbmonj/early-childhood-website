# This workflow will deploy a simple static site (HTML, CSS, JS) to GitHub Pages.
# It does NOT use Jekyll or Ruby, keeping the setup as simple as possible.

name: Deploy Static Site to Pages

on:
  # Runs on pushes targeting the default branch (usually 'main')
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the start and latest queued.
# However, do NOT cancel in-progress runs as we want to be able to roll back.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build/Prepare job (renamed from 'build' as no actual 'build' is done for static sites)
  upload-static-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This step uploads your entire repository content (or a specific folder)
      # as an artifact that GitHub Pages will then deploy.
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Path to the directory containing your static files.
          # If your index.html and other assets are in the root of your repo, use '.'
          # If they are in a subfolder (e.g., 'docs'), use './docs'
          path: '.' # Assuming your index.html is in the root of your repository

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: upload-static-files # This job depends on the static files being uploaded
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
